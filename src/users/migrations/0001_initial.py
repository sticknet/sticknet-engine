# Generated by Django 3.1.5 on 2021-06-04 11:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False, unique=True)),
                ('oneTimeId', models.CharField(blank=True, max_length=1000, null=True)),
                ('localId', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=1000, null=True)),
                ('passwordSalt', models.CharField(blank=True, max_length=44, null=True)),
                ('phone', models.CharField(default='0', max_length=50, unique=True)),
                ('contacts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, null=True, size=None)),
                ('country', models.CharField(default='', max_length=50)),
                ('dial_code', models.CharField(default='', max_length=5)),
                ('name', models.CharField(blank=True, max_length=23, null=True)),
                ('birth_day_hidden', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('changing_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('color', models.CharField(blank=True, choices=[('red', 'red'), ('blue', 'blue'), ('green', 'green'), ('orange', 'orange'), ('purple', 'purple'), ('limegreen', 'limegreen'), ('deeppink', 'deeppink'), ('darkred', 'darkred'), ('deepskyblue', 'deepskyblue'), ('mediumpurple', 'mediumpurple')], max_length=20, null=True)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('code_trials', models.IntegerField(default=0)),
                ('delete_code', models.IntegerField(blank=True, null=True)),
                ('hiddenImages', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, null=True, size=None)),
                ('nextPreKeyId', models.IntegerField(default=0)),
                ('finishedRegistration', models.BooleanField(default=False)),
                ('highlightsIds', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, null=True, size=None)),
                ('websiteLink', models.CharField(blank=True, max_length=100, null=True)),
                ('passwordKey', models.CharField(blank=True, max_length=100, null=True)),
                ('added_connections', models.ManyToManyField(blank=True, related_name='added_connections_reverse', to=settings.AUTH_USER_MODEL)),
                ('birth_day', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_birth_days', to='groups.cipher')),
                ('blocked', models.ManyToManyField(blank=True, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='categories', to='groups.cipher')),
                ('connections', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LimitedAccessToken',
            fields=[
                ('hash', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('salt', models.CharField(max_length=16, unique=True)),
                ('phone', models.CharField(max_length=50, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileCover',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.FileField(upload_to='ProfileCovers/')),
                ('cipher', models.CharField(max_length=1000)),
                ('fileSize', models.IntegerField(default=0)),
                ('stickId', models.CharField(max_length=100)),
                ('resizeMode', models.CharField(default='cover', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.FileField(upload_to='ProfilePictures/')),
                ('cipher', models.CharField(default='', max_length=1000)),
                ('fileSize', models.IntegerField(default=0)),
                ('stickId', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceId', models.CharField(max_length=1000)),
                ('name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='cover',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profilecover'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, to='groups.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='invited_groups',
            field=models.ManyToManyField(blank=True, related_name='invited_members', to='groups.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='just_added_groups',
            field=models.ManyToManyField(blank=True, related_name='just_added', to='groups.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='just_removed_groups',
            field=models.ManyToManyField(blank=True, related_name='just_removed', to='groups.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_picture',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.profilepicture'),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_statuses', to='groups.cipher'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
